$date
	Wed Mar  9 03:45:02 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module decodesupertb $end
$scope module DUT1 $end
$var wire 1 ! clk $end
$var wire 1 " cnd $end
$var wire 4 # icode [3:0] $end
$var wire 4 $ rA [3:0] $end
$var wire 4 % rB [3:0] $end
$var reg 4 & dstE [3:0] $end
$var reg 4 ' dstM [3:0] $end
$var reg 4 ( srcA [3:0] $end
$var reg 4 ) srcB [3:0] $end
$upscope $end
$upscope $end
$scope module decodesupertb $end
$scope module DUT2 $end
$var wire 4 * dstE [3:0] $end
$var wire 4 + dstM [3:0] $end
$var wire 4 , srcA [3:0] $end
$var wire 4 - srcB [3:0] $end
$var wire 64 . valE [63:0] $end
$var wire 64 / valM [63:0] $end
$var wire 64 0 valB [63:0] $end
$var wire 64 1 valA [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 1
b0 0
bx /
b10000100000 .
b1111 -
b1111 ,
b1111 +
b1 *
b1111 )
b1111 (
b1111 '
b1 &
b1 %
b1111 $
b11 #
1"
0!
$end
#5
1!
#10
b100 &
b100 *
b100000 .
b100 %
0!
#15
1!
#20
b10000100000 1
b1 (
b1 ,
b111 &
b111 *
b10000100000 .
b111 %
b1 $
b10 #
0!
#25
1!
#30
b111 (
b111 ,
b1111 &
b1111 *
0"
b110 %
b111 $
0!
#35
1!
#40
b101000 0
b101000 1
b100 )
b100 -
b100 (
b100 ,
b100 &
b100 *
1"
b101000 .
b1111 %
b1111 $
b1001 #
0!
#45
1!
#50
