#! /usr/bin/vvp
:ivl_version "10.3 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "vhdl_sys";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x7fffce9f6f20 .scope module, "fetchsupertb" "fetchsupertb" 2 1;
 .timescale 0 0;
v0x7fffcea1f220_0 .var "clk", 0 0;
v0x7fffcea1f310_0 .net "icode", 3 0, v0x7fffcea1e680_0;  1 drivers
v0x7fffcea1f3e0_0 .net "ifun", 3 0, v0x7fffcea1e770_0;  1 drivers
v0x7fffcea1f4e0_0 .net "imem_error", 0 0, v0x7fffce9e2a60_0;  1 drivers
v0x7fffcea1f580_0 .net "instr_valid", 0 0, v0x7fffcea1e940_0;  1 drivers
v0x7fffcea1f670_0 .var "pc", 63 0;
v0x7fffcea1f760_0 .net "rA", 3 0, v0x7fffcea1ec50_0;  1 drivers
v0x7fffcea1f800_0 .net "rB", 3 0, v0x7fffcea1ed10_0;  1 drivers
v0x7fffcea1f8a0_0 .net/s "valC", 63 0, v0x7fffcea1eee0_0;  1 drivers
v0x7fffcea1f970_0 .net/s "valP", 63 0, v0x7fffcea1efa0_0;  1 drivers
S_0x7fffce9f70a0 .scope module, "UUT" "fetchsuper" 2 15, 3 3 0, S_0x7fffce9f6f20;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "imem_error"
    .port_info 1 /OUTPUT 1 "instr_valid"
    .port_info 2 /OUTPUT 4 "icode"
    .port_info 3 /OUTPUT 4 "ifun"
    .port_info 4 /OUTPUT 4 "rA"
    .port_info 5 /OUTPUT 4 "rB"
    .port_info 6 /OUTPUT 64 "valC"
    .port_info 7 /OUTPUT 64 "valP"
    .port_info 8 /INPUT 64 "pc"
    .port_info 9 /INPUT 1 "clk"
v0x7fffcea1e500_0 .net "align", 71 0, v0x7fffce9e29c0_0;  1 drivers
v0x7fffcea1e5e0_0 .net "clk", 0 0, v0x7fffcea1f220_0;  1 drivers
v0x7fffcea1e680_0 .var "icode", 3 0;
v0x7fffcea1e770_0 .var "ifun", 3 0;
v0x7fffcea1e850_0 .net "imem_error", 0 0, v0x7fffce9e2a60_0;  alias, 1 drivers
v0x7fffcea1e940_0 .var "instr_valid", 0 0;
v0x7fffcea1e9e0_0 .var "need_regids", 0 0;
v0x7fffcea1eaa0_0 .var "need_valC", 0 0;
v0x7fffcea1eb60_0 .net "pc", 63 0, v0x7fffcea1f670_0;  1 drivers
v0x7fffcea1ec50_0 .var "rA", 3 0;
v0x7fffcea1ed10_0 .var "rB", 3 0;
v0x7fffcea1edf0_0 .net "split", 7 0, v0x7fffcea1e350_0;  1 drivers
v0x7fffcea1eee0_0 .var/s "valC", 63 0;
v0x7fffcea1efa0_0 .var/s "valP", 63 0;
E_0x7fffce9f0a00 .event edge, v0x7fffce9e29c0_0, v0x7fffcea1e350_0;
S_0x7fffce9e7de0 .scope module, "imem" "instruction_memory" 3 25, 4 1 0, S_0x7fffce9f70a0;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "imem_error"
    .port_info 1 /OUTPUT 8 "split"
    .port_info 2 /OUTPUT 72 "align"
    .port_info 3 /INPUT 64 "pc"
v0x7fffce9e29c0_0 .var "align", 71 0;
v0x7fffce9e2a60_0 .var "imem_error", 0 0;
v0x7fffcea1e1a0 .array "ins_data", 0 1023, 7 0;
v0x7fffcea1e270_0 .net/s "pc", 63 0, v0x7fffcea1f670_0;  alias, 1 drivers
v0x7fffcea1e350_0 .var "split", 7 0;
E_0x7fffce9f00d0 .event edge, v0x7fffcea1e270_0;
    .scope S_0x7fffce9e7de0;
T_0 ;
    %vpi_call 4 21 "$readmemh", "opcodes.txt", v0x7fffcea1e1a0 {0 0 0};
    %vpi_call 4 25 "$writememh", "instr_as_read.txt", v0x7fffcea1e1a0 {0 0 0};
    %vpi_call 4 27 "$display", "read this data from the file" {0 0 0};
    %end;
    .thread T_0;
    .scope S_0x7fffce9e7de0;
T_1 ;
    %wait E_0x7fffce9f00d0;
    %load/vec4 v0x7fffcea1e270_0;
    %cmpi/u 0, 0, 64;
    %flag_mov 8, 5;
    %pushi/vec4 4095, 0, 64;
    %load/vec4 v0x7fffcea1e270_0;
    %cmp/u;
    %flag_or 5, 8;
    %flag_mov 8, 5;
    %jmp/0 T_1.0, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_1.1, 8;
T_1.0 ; End of true expr.
    %pushi/vec4 0, 0, 1;
    %jmp/0 T_1.1, 8;
 ; End of false expr.
    %blend;
T_1.1;
    %store/vec4 v0x7fffce9e2a60_0, 0, 1;
    %load/vec4 v0x7fffce9e2a60_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %ix/getv/s 4, v0x7fffcea1e270_0;
    %load/vec4a v0x7fffcea1e1a0, 4;
    %assign/vec4 v0x7fffcea1e350_0, 0;
    %load/vec4 v0x7fffcea1e270_0;
    %pad/s 65;
    %addi 1, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x7fffcea1e1a0, 4;
    %ix/load 4, 0, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x7fffce9e29c0_0, 4, 5;
    %load/vec4 v0x7fffcea1e270_0;
    %pad/s 65;
    %addi 2, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x7fffcea1e1a0, 4;
    %ix/load 4, 8, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x7fffce9e29c0_0, 4, 5;
    %load/vec4 v0x7fffcea1e270_0;
    %pad/s 65;
    %addi 3, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x7fffcea1e1a0, 4;
    %ix/load 4, 16, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x7fffce9e29c0_0, 4, 5;
    %load/vec4 v0x7fffcea1e270_0;
    %pad/s 65;
    %addi 4, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x7fffcea1e1a0, 4;
    %ix/load 4, 24, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x7fffce9e29c0_0, 4, 5;
    %load/vec4 v0x7fffcea1e270_0;
    %pad/s 65;
    %addi 5, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x7fffcea1e1a0, 4;
    %ix/load 4, 32, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x7fffce9e29c0_0, 4, 5;
    %load/vec4 v0x7fffcea1e270_0;
    %pad/s 65;
    %addi 6, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x7fffcea1e1a0, 4;
    %ix/load 4, 40, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x7fffce9e29c0_0, 4, 5;
    %load/vec4 v0x7fffcea1e270_0;
    %pad/s 65;
    %addi 7, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x7fffcea1e1a0, 4;
    %ix/load 4, 48, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x7fffce9e29c0_0, 4, 5;
    %load/vec4 v0x7fffcea1e270_0;
    %pad/s 65;
    %addi 8, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x7fffcea1e1a0, 4;
    %ix/load 4, 56, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x7fffce9e29c0_0, 4, 5;
    %load/vec4 v0x7fffcea1e270_0;
    %pad/s 65;
    %addi 9, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x7fffcea1e1a0, 4;
    %ix/load 4, 64, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x7fffce9e29c0_0, 4, 5;
T_1.2 ;
    %delay 5, 0;
    %vpi_call 4 57 "$display", "currently at instruction_memory.v  ,  found   split = %h  align = %h  for received  pc = %h ", v0x7fffcea1e350_0, v0x7fffce9e29c0_0, v0x7fffcea1e270_0 {0 0 0};
    %jmp T_1;
    .thread T_1, $push;
    .scope S_0x7fffce9f70a0;
T_2 ;
    %wait E_0x7fffce9f0a00;
    %vpi_call 3 31 "$display", "currently at fetchsuper.v.... received  split = %h and align = %h  at pc = %h ", v0x7fffcea1edf0_0, v0x7fffcea1e500_0, v0x7fffcea1eb60_0 {0 0 0};
    %load/vec4 v0x7fffcea1edf0_0;
    %parti/s 4, 4, 4;
    %store/vec4 v0x7fffcea1e680_0, 0, 4;
    %load/vec4 v0x7fffcea1edf0_0;
    %parti/s 4, 0, 2;
    %store/vec4 v0x7fffcea1e770_0, 0, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 2, 0, 4;
    %flag_mov 8, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 3, 0, 4;
    %flag_or 4, 8;
    %flag_mov 8, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 4, 0, 4;
    %flag_or 4, 8;
    %flag_mov 8, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 5, 0, 4;
    %flag_or 4, 8;
    %flag_mov 8, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 6, 0, 4;
    %flag_or 4, 8;
    %flag_mov 8, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 10, 0, 4;
    %flag_or 4, 8;
    %flag_mov 8, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 11, 0, 4;
    %flag_or 4, 8;
    %flag_mov 8, 4;
    %jmp/0 T_2.0, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_2.1, 8;
T_2.0 ; End of true expr.
    %pushi/vec4 0, 0, 1;
    %jmp/0 T_2.1, 8;
 ; End of false expr.
    %blend;
T_2.1;
    %store/vec4 v0x7fffcea1e9e0_0, 0, 1;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 3, 0, 4;
    %flag_mov 8, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 4, 0, 4;
    %flag_or 4, 8;
    %flag_mov 8, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 5, 0, 4;
    %flag_or 4, 8;
    %flag_mov 8, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 7, 0, 4;
    %flag_or 4, 8;
    %flag_mov 8, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 8, 0, 4;
    %flag_or 4, 8;
    %flag_mov 8, 4;
    %jmp/0 T_2.2, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_2.3, 8;
T_2.2 ; End of true expr.
    %pushi/vec4 0, 0, 1;
    %jmp/0 T_2.3, 8;
 ; End of false expr.
    %blend;
T_2.3;
    %store/vec4 v0x7fffcea1eaa0_0, 0, 1;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/u 0, 0, 4;
    %flag_mov 8, 5;
    %pushi/vec4 11, 0, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmp/u;
    %flag_or 5, 8;
    %flag_mov 8, 5;
    %jmp/0 T_2.4, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_2.5, 8;
T_2.4 ; End of true expr.
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 2, 0, 4;
    %flag_mov 9, 4;
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 7, 0, 4;
    %flag_or 4, 9;
    %flag_mov 9, 4;
    %jmp/0 T_2.6, 9;
    %pushi/vec4 6, 0, 4;
    %load/vec4 v0x7fffcea1e770_0;
    %cmp/u;
    %flag_mov 10, 5;
    %jmp/0 T_2.8, 10;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_2.9, 10;
T_2.8 ; End of true expr.
    %pushi/vec4 1, 0, 1;
    %jmp/0 T_2.9, 10;
 ; End of false expr.
    %blend;
T_2.9;
    %jmp/1 T_2.7, 9;
T_2.6 ; End of true expr.
    %load/vec4 v0x7fffcea1e680_0;
    %cmpi/e 6, 0, 4;
    %flag_mov 10, 4;
    %jmp/0 T_2.10, 10;
    %pushi/vec4 3, 0, 4;
    %load/vec4 v0x7fffcea1e770_0;
    %cmp/u;
    %flag_mov 11, 5;
    %jmp/0 T_2.12, 11;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_2.13, 11;
T_2.12 ; End of true expr.
    %pushi/vec4 1, 0, 1;
    %jmp/0 T_2.13, 11;
 ; End of false expr.
    %blend;
T_2.13;
    %jmp/1 T_2.11, 10;
T_2.10 ; End of true expr.
    %pushi/vec4 0, 0, 4;
    %load/vec4 v0x7fffcea1e770_0;
    %cmp/u;
    %flag_mov 11, 5;
    %jmp/0 T_2.14, 11;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_2.15, 11;
T_2.14 ; End of true expr.
    %pushi/vec4 1, 0, 1;
    %jmp/0 T_2.15, 11;
 ; End of false expr.
    %blend;
T_2.15;
    %jmp/0 T_2.11, 10;
 ; End of false expr.
    %blend;
T_2.11;
    %jmp/0 T_2.7, 9;
 ; End of false expr.
    %blend;
T_2.7;
    %jmp/0 T_2.5, 8;
 ; End of false expr.
    %blend;
T_2.5;
    %store/vec4 v0x7fffcea1e940_0, 0, 1;
    %load/vec4 v0x7fffcea1e940_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.16, 8;
    %load/vec4 v0x7fffcea1e9e0_0;
    %flag_set/vec4 8;
    %jmp/0 T_2.18, 8;
    %load/vec4 v0x7fffcea1e500_0;
    %parti/s 4, 4, 4;
    %jmp/1 T_2.19, 8;
T_2.18 ; End of true expr.
    %pushi/vec4 15, 0, 4;
    %jmp/0 T_2.19, 8;
 ; End of false expr.
    %blend;
T_2.19;
    %store/vec4 v0x7fffcea1ec50_0, 0, 4;
    %load/vec4 v0x7fffcea1e9e0_0;
    %flag_set/vec4 8;
    %jmp/0 T_2.20, 8;
    %load/vec4 v0x7fffcea1e500_0;
    %parti/s 4, 0, 2;
    %jmp/1 T_2.21, 8;
T_2.20 ; End of true expr.
    %pushi/vec4 15, 0, 4;
    %jmp/0 T_2.21, 8;
 ; End of false expr.
    %blend;
T_2.21;
    %store/vec4 v0x7fffcea1ed10_0, 0, 4;
    %load/vec4 v0x7fffcea1eaa0_0;
    %flag_set/vec4 8;
    %jmp/0 T_2.22, 8;
    %load/vec4 v0x7fffcea1e9e0_0;
    %flag_set/vec4 9;
    %jmp/0 T_2.24, 9;
    %load/vec4 v0x7fffcea1e500_0;
    %parti/s 64, 8, 5;
    %jmp/1 T_2.25, 9;
T_2.24 ; End of true expr.
    %load/vec4 v0x7fffcea1e500_0;
    %parti/s 64, 0, 2;
    %jmp/0 T_2.25, 9;
 ; End of false expr.
    %blend;
T_2.25;
    %jmp/1 T_2.23, 8;
T_2.22 ; End of true expr.
    %pushi/vec4 0, 0, 64;
    %jmp/0 T_2.23, 8;
 ; End of false expr.
    %blend;
T_2.23;
    %store/vec4 v0x7fffcea1eee0_0, 0, 64;
    %load/vec4 v0x7fffcea1eb60_0;
    %addi 1, 0, 64;
    %load/vec4 v0x7fffcea1e9e0_0;
    %pad/u 64;
    %add;
    %load/vec4 v0x7fffcea1eaa0_0;
    %pad/u 64;
    %muli 8, 0, 64;
    %add;
    %store/vec4 v0x7fffcea1efa0_0, 0, 64;
T_2.16 ;
    %vpi_call 3 63 "$display", "   got these values .... need regids = %b  need_valC = %b  and valP = %h  icode = %h ifun = %h", v0x7fffcea1e9e0_0, v0x7fffcea1eaa0_0, v0x7fffcea1efa0_0, v0x7fffcea1e680_0, v0x7fffcea1e770_0 {0 0 0};
    %jmp T_2;
    .thread T_2, $push;
    .scope S_0x7fffce9f6f20;
T_3 ;
    %vpi_call 2 19 "$dumpfile", "fetchsuper.vcd" {0 0 0};
    %vpi_call 2 20 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x7fffce9f70a0 {0 0 0};
    %pushi/vec4 0, 0, 64;
    %store/vec4 v0x7fffcea1f670_0, 0, 64;
    %delay 5, 0;
    %delay 5, 0;
    %vpi_call 2 32 "$display", "arrived at testbench, to display output values, ....." {0 0 0};
    %vpi_call 2 33 "$display", "imem_error :%b   instr_valid :%b   icode =%h  ifun =%h   rA =%h  rB =%h valC =%h valP =%h  pc = %h \012", v0x7fffcea1f4e0_0, v0x7fffcea1f580_0, v0x7fffcea1f310_0, v0x7fffcea1f3e0_0, v0x7fffcea1f760_0, v0x7fffcea1f800_0, v0x7fffcea1f8a0_0, v0x7fffcea1f970_0, v0x7fffcea1f670_0 {0 0 0};
    %pushi/vec4 10, 0, 64;
    %store/vec4 v0x7fffcea1f670_0, 0, 64;
    %delay 5, 0;
    %delay 5, 0;
    %vpi_call 2 47 "$display", "arrived at testbench, to display output values, ....." {0 0 0};
    %vpi_call 2 48 "$display", "imem_error :%b   instr_valid :%b   icode =%h  ifun =%h   rA =%h  rB =%h valC =%h valP =%h  pc = %h \012", v0x7fffcea1f4e0_0, v0x7fffcea1f580_0, v0x7fffcea1f310_0, v0x7fffcea1f3e0_0, v0x7fffcea1f760_0, v0x7fffcea1f800_0, v0x7fffcea1f8a0_0, v0x7fffcea1f970_0, v0x7fffcea1f670_0 {0 0 0};
    %pushi/vec4 12, 0, 64;
    %store/vec4 v0x7fffcea1f670_0, 0, 64;
    %delay 5, 0;
    %delay 5, 0;
    %vpi_call 2 61 "$display", "arrived at testbench, to display output values, ....." {0 0 0};
    %vpi_call 2 62 "$display", "imem_error :%b   instr_valid :%b   icode =%h  ifun =%h   rA =%h  rB =%h valC =%h valP =%h  pc = %h \012", v0x7fffcea1f4e0_0, v0x7fffcea1f580_0, v0x7fffcea1f310_0, v0x7fffcea1f3e0_0, v0x7fffcea1f760_0, v0x7fffcea1f800_0, v0x7fffcea1f8a0_0, v0x7fffcea1f970_0, v0x7fffcea1f670_0 {0 0 0};
    %pushi/vec4 13, 0, 64;
    %store/vec4 v0x7fffcea1f670_0, 0, 64;
    %delay 5, 0;
    %delay 5, 0;
    %vpi_call 2 75 "$display", "arrived at testbench, to display output values, ....." {0 0 0};
    %vpi_call 2 76 "$display", "imem_error :%b   instr_valid :%b   icode =%h  ifun =%h   rA =%h  rB =%h valC =%h valP =%h  pc = %h \012", v0x7fffcea1f4e0_0, v0x7fffcea1f580_0, v0x7fffcea1f310_0, v0x7fffcea1f3e0_0, v0x7fffcea1f760_0, v0x7fffcea1f800_0, v0x7fffcea1f8a0_0, v0x7fffcea1f970_0, v0x7fffcea1f670_0 {0 0 0};
    %end;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "fetchsupertb.v";
    "fetchsuper.v";
    "./instruction_memory.v";
